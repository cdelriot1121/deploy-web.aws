name: CI/CD Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/package.json'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm install
    
    - name: Verify backend code
      run: |
        cd backend
        node -c server.js
        echo "✅ Backend code syntax is valid"

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Verify frontend files
      run: |
        cd frontend
        if [ -f "index.html" ] && [ -f "style.css" ] && [ -f "script.js" ]; then
          echo "✅ Frontend files exist"
        else
          echo "❌ One or more frontend files are missing"
          exit 1
        fi
    
    - name: Validate HTML
      run: |
        cd frontend
        npx -y html-validate index.html
        echo "✅ HTML validation passed"
      continue-on-error: true

  deployment-check:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - name: Check Frontend (Render Static Site)
      run: |
        FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://deploy-web-aws-staticsite.onrender.com/")
        echo "Frontend status: $FRONTEND_STATUS"
        if [ "$FRONTEND_STATUS" == "200" ]; then
          echo "✅ Frontend is accessible"
        else
          echo "⚠️ Frontend check failed with status $FRONTEND_STATUS"
        fi
      continue-on-error: true
    
    - name: Check Backend API (Render Web Service)
      run: |
        BACKEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://deploy-web-aws.onrender.com/tasks")
        echo "Backend status: $BACKEND_STATUS"
        if [ "$BACKEND_STATUS" == "200" ]; then
          echo "✅ Backend API is accessible"
        else
          echo "⚠️ Backend check failed with status $BACKEND_STATUS"
        fi
      continue-on-error: true

  generate-status:
    runs-on: ubuntu-latest
    needs: [deployment-check]
    
    steps:
    - name: Create deployment status badge
      run: |
        echo "![Deployment Status](https://github.com/$GITHUB_REPOSITORY/workflows/CI%2FCD%20Test%20Suite/badge.svg)" > status.md
    
    - name: Upload status
      uses: actions/upload-artifact@v4
      with:
        name: deployment-status
        path: status.md
        retention-days: 7